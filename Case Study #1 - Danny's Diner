-- 1. What is the total amount each customer spent at the restaurant?
SELECT sales.customer_id, SUM(menu.price)
FROM sales
JOIN menu
ON sales.product_id = menu.product_id
GROUP BY sales.customer_id;
-- 2. How many days has each customer visited the restaurant?
SELECT customer_id, COUNT(DISTINCT order_date)
FROM sales
GROUP BY customer_id;
-- 3. What was the first item from the menu purchased by each customer?
WITH orders_ranked AS (
  SELECT customer_id, product_id, ROW_NUMBER() OVER(PARTITION BY customer_id ORDER BY order_date) AS order_rank
  FROM sales
)
SELECT customer_id, menu.product_name
FROM orders_ranked
JOIN menu
ON orders_ranked.product_id = menu.product_id
WHERE order_rank = 1;
-- 4. What is the most purchased item on the menu and how many times was it purchased by all customers?
SELECT menu.product_name, COUNT(sales.product_id)
FROM menu
JOIN sales
ON menu.product_id = sales.product_id
GROUP BY menu.product_name
ORDER BY COUNT(sales.product_id) DESC
LIMIT 1;
-- 5. Which item was the most popular for each customer?
WITH items_count AS (
  SELECT customer_id, product_id, COUNT(product_id) as counts
  FROM sales
  GROUP BY customer_id, product_id
),
items_rank AS (
  SELECT customer_id, counts, product_id, RANK() OVER(PARTITION BY customer_id ORDER BY counts DESC) as item_rank
  FROM items_count
)
SELECT customer_id, product_name, counts
FROM items_rank
JOIN menu
ON items_rank.product_id = menu.product_id
WHERE item_rank = 1
ORDER BY customer_id, product_name;
-- 6. Which item was purchased first by the customer after they became a member?
SELECT DISTINCT ON (sales.customer_id) sales.customer_id, order_date, product_id
FROM sales
JOIN members
ON sales.customer_id = members.customer_id
WHERE join_date < order_date
ORDER BY sales.customer_id, order_date;
-- 7. Which item was purchased just before the customer became a member?
SELECT DISTINCT ON (sales.customer_id) sales.customer_id, order_date, product_id
FROM sales
JOIN members
ON sales.customer_id = members.customer_id
WHERE join_date > order_date
ORDER BY sales.customer_id, order_date DESC;
-- 8. What is the total items and amount spent for each member before they became a member?
SELECT members.customer_id, COUNT(sales.product_id), SUM(menu.price) 
FROM sales
JOIN members
ON members.customer_id = sales.customer_id
JOIN menu
ON menu.product_id = sales.product_id
WHERE order_date < join_date
GROUP BY members.customer_id
ORDER BY members.customer_id;
-- 9.  If each $1 spent equates to 10 points and sushi has a 2x points multiplier - how many points would each customer have?
WITH sales_points AS (
  SELECT customer_id, sales.product_id,
  CASE
    WHEN product_name = 'sushi' THEN price * 20
  ELSE
    price * 10
  END AS points
  FROM sales
  JOIN menu
  ON menu.product_id = sales.product_id
)
SELECT customer_id, SUM(points)
FROM sales_points
GROUP BY customer_id;
-- 10. In the first week after a customer joins the program (including their join date) they earn 2x points on all items, not just sushi - how many points do customer A and B have at the end of January?
WITH sales_points AS (
  SELECT members.customer_id, sales.product_id,
  CASE
    WHEN (product_name = 'sushi' OR ((order_date - join_date) < 7 AND (order_date - join_date) > 0)) THEN price * 20
  ELSE
    price * 10
  END AS points
  FROM sales
  JOIN menu
  ON menu.product_id = sales.product_id
  JOIN members
  ON members.customer_id = sales.customer_id
  WHERE order_date < '2021-02-01'
)
SELECT customer_id, SUM(points)
FROM sales_points
GROUP BY customer_id;
